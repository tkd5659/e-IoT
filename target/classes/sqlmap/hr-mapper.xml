<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hr">
<!-- 신규사원정보 저장 -->
<insert id="insert">
insert into employees(employee_id, last_name, first_name, email, phone_number, salary, hire_date, job_id, department_id)
values(employees_seq.nextval, #{last_name},#{first_name},#{email},#{phone_number}, #{salary}, #{hire_date},#{job_id},
<choose><when test="department_id == -1">null</when>
		<otherwise>#{department_id}</otherwise>
</choose>
)


</insert>
<!-- 선택한 사원정보 삭제 -->
<delete id="delete">
delete from employees where employee_id = #{employee_id}
</delete>

<!-- 회사 전체 업무목록 -->
<select id="hr_jobs" resultType="job">
select * from jobs order by job_title
</select>

<!-- 회사 전체 부서목록 -->
<select id="hr_departments" resultType="department">
select * from departments order by department_name
</select>


<!-- 선택한 사원정보 변경저장 -->
<update id="update">
update employees
set last_name = #{last_name}, first_name = #{first_name}
	, email = #{email}, phone_number = #{phone_number}, salary = #{salary}
	, hire_date = #{hire_date}
	, job_id = #{job_id}
	, 
	<if test="department_id == -1">department_id = null</if>
	<if test="department_id != -1">department_id = #{department_id}</if>
where employee_id = #{employee_id}	
</update>


<!-- 선택한 사원정보 조회 -->
<select id="info" resultType="employee">
select e.*, last_name||' '||first_name name
		, department_name, job_title
from employees e left outer join departments d 
						on e.department_id = d.department_id
	 inner join jobs j on e.job_id = j.job_id
where employee_id = #{employee_id}	 
</select>

<!-- 사원이 소속된 부서목록 -->
<select id="employee_departments" resultType="department">
select distinct department_id, nvl(department_name, '소속없음') department_name
from employees e left outer join departments d using(department_id)
order by department_id
</select>

<!-- 전체사원목록 -->
<select id="list" resultType="employee">
select e.*, last_name||' '||first_name name
		, department_name, job_title 
from employees e left outer join departments d 
				on e.department_id = d.department_id
	 inner join jobs j on e.job_id = j.job_id
<if test="department_id > 0">
where e.department_id = #{department_id}	 
</if>
<if test="department_id == 0">
where e.department_id is null	 
</if>
order by employee_id
</select>

</mapper>